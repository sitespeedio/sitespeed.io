script(src= rootPath + 'js/fetch.min.js')
script(src= rootPath + 'js/perf-cascade.min.js')
script(type='text/javascript').
  var outputHolderEl = document.getElementById("output");
  var pageSelectorEl = document.getElementById("page-selector");
  var legendHolderEl = document.getElementById("legend-holder");
  var options = {
    rowHeight: 23,
    showAlignmentHelpers : true,
    showIndicatorIcons: false,
    showMimeTypeIcon: true,
    leftColumnWith: 30,
    legendHolder: legendHolderEl,
    pageSelector: pageSelectorEl,
    selectedPage: #{runIndex ||Â 0}
  };

if options.gzipHAR
    script(src= rootPath + 'js/gunzip.min.js')
    script(type='text/javascript').
      if (window["fetch"]) {
          window["fetch"]('data/browsertime.har.gz')
          .then(f => f.arrayBuffer()).then(arrayBuffer => {
            var byteArray = new Uint8Array(arrayBuffer);
            var gunzip = new Zlib.Gunzip(byteArray);
            var decompressedArray = gunzip.decompress();
            var string = new TextDecoder("utf-8").decode(decompressedArray);
            var har = JSON.parse(string);
            var perfCascadeSvg = perfCascade.fromHar(har, options);
            outputHolderEl.appendChild(perfCascadeSvg);
          })
      }
else
    script(type='text/javascript').
      if (window["fetch"]) {
       window["fetch"]('data/browsertime.har')
       .then(f => f.json()).then(har => {
         var perfCascadeSvg = perfCascade.fromHar(har, options);
         outputHolderEl.appendChild(perfCascadeSvg);
       })
      }
